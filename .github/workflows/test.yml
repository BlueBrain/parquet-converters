name: Run tests

on:
  push:
    branches: ['main']
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        packages: [""]
        submodules: [true]
        include:
          - packages: "catch2 libcli11-dev"
            submodules: false

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: ${{ matrix.submodules }}

    - name: Set up Apache Arrow repositories
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates lsb-release wget
        wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
        sudo apt-get install -y ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
        sudo apt-get update

    - name: Install build dependencies
      run: |
        sudo apt-get install -y cmake g++ libhdf5-openmpi-dev librange-v3-dev ninja-build nlohmann-json3-dev ${{ matrix.packages }}
        sudo apt-get install -y libarrow-dev libparquet-dev

    - name: Clone HighFive
      uses: actions/checkout@3
      if: ${{ ! matrix.submodules }}
      with:
        repository: BlueBrain/HighFive
        path: HighFive

    - name: Install HighFive
      if: ${{ ! matrix.submodules }}
      run: |
        cmake -B highfive_build -S highfive -DCMAKE_INSTALL_PREFIX=highfive_install
        cmake --build highfive_build
        cmake --install highfive_build
        echo "CMAKE_PREFIX_PATH=$PWD/highfive_build" >> "$GITHUB_ENV"

    - name: Configure
      run: |
        cmake -B build -S . -GNinja \
          -DCMAKE_CXX_COMPILER=$(which mpicxx)
